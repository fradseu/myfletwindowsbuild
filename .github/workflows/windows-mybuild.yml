name: Windows Build

on:
  push:
    branches: 
      - main
  workflow_dispatch:

env:
  BUILD_NUMBER: 1
  BUILD_VERSION: 1.0.0
  PYTHON_VERSION: 3.12.2
  FLUTTER_VERSION: 3.24.0

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Run Flet Build Windows
        run: |
          flutter config --no-analytics
          flet build windows --verbose --no-rich-output --build-number=$env:BUILD_NUMBER --build-version=$env:BUILD_VERSION

      - name: Verify build output
        run: |
          if (Test-Path "build/windows") {
            Write-Host "Build successful! Listing contents:"
            Get-ChildItem -Path "build/windows" -Recurse
          } else {
            Write-Host "Build directory not found!"
            exit 1
          }

      - name: Upload Windows Build Artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          name: windows-build-artifact
          path: build/windows/*

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-build-artifact

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ env.BUILD_VERSION }}
          release_name: Release v${{ env.BUILD_VERSION }}
          body: |
            Release notes for version v${{ env.BUILD_VERSION }}

            Download the build artifact below.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Build Artifact to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: windows-build-artifact.zip
          asset_name: windows-build-artifact-v${{ env.BUILD_VERSION }}.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
